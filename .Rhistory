c("All",
unique(as.character(mpg$cyl))))
)
),
# Create a new row for the table.
DT::dataTableOutput("table")
)
server<-function(input, output) {
# Filter data based on selections
output$table <- DT::renderDataTable(DT::datatable({
data <- mpg
if (input$man != "All") {
data <- data[data$manufacturer == input$man,]
}
if (input$cyl != "All") {
data <- data[data$cyl == input$cyl,]
}
if (input$trans != "All") {
data <- data[data$trans == input$trans,]
}
data
}))
}
shinyApp(ui,server)
library(ggplot2)
ui<-fluidPage(
titlePanel("Basic DataTable"),
# Create a new Row in the UI for selectInputs
fluidRow(
column(4,
selectInput("man",
"Manufacturer:",
c("All",
unique(as.character(mpg$manufacturer))))
),
column(4,
selectInput("trans",
"Transmission:",
c("All",
unique(as.character(mpg$trans))))
),
column(4,
selectInput("cyl",
"Cylinders:",
c("All",
unique(as.character(mpg$cyl))))
)
),
# Create a new row for the table.
DT::dataTableOutput("table")
)
server<-function(input, output) {
# Filter data based on selections
output$table <- DT::renderDataTable(DT::datatable({
data <- mpg
if (input$man != "All") {
data <- data[data$manufacturer == input$man,]
}
if (input$cyl != "All") {
data <- data[data$cyl == input$cyl,]
}
if (input$trans != "All") {
data <- data[data$trans == input$trans,]
}
data
}))
}
shinyApp(ui,server)
library(ggplot2)
mydata<-readxl::read_excel("Shniy/App.R/foreign_students_by_nationality_2021_2022.xlsx")
ui<-fluidPage(
titlePanel("Foreign Students Number in Turkey"),
# Create a new Row in the UI for selectInputs
fluidRow(
column(4,
selectInput("Province",
"Province:",
c("All",
unique(as.character(mydata$`İl Adı`))))
),
column(4,
selectInput("University Type",
"University Type:",
c("All",
unique(as.character(mydata$`Üniversite Türü`))))
),
column(4,
selectInput("University Name",
"University Names:",
c("All",
unique(as.character(mydata$`Üniversite Adı`))))
)
),
# Create a new row for the table.
DT::dataTableOutput("table")
)
server <- function(input, output) {
# Filter data based on selections
output$table <- DT::renderDataTable(DT::datatable({
data <- mydata
if (input$Province != "All") {
data <- data[data$`İl Adı`== input$Province,]
}
if (input$`University Type` != "All") {
data <- data[data$`Üniversite Türü` == input$`University Type`,]
}
if (input$`University Name` != "All") {
data <- data[data$`Üniversite Adı` == input$`University Name`,]
}
data
}))
}
shinyApp(ui,server)
library(ggplot2)
mydata<-readxl::read_excel("Shniy/App.R/foreign_students_by_nationality_2021_2022.xlsx")
ui<-fluidPage(
titlePanel(strong("Foreign Students Number in Turkey")),
# Create a new Row in the UI for selectInputs
fluidRow(
column(4,
selectInput("Province",
"Province:",
c("All",
unique(as.character(mydata$`İl Adı`))))
),
column(4,
selectInput("University Type",
"University Type:",
c("All",
unique(as.character(mydata$`Üniversite Türü`))))
),
column(4,
selectInput("University Name",
"University Names:",
c("All",
unique(as.character(mydata$`Üniversite Adı`))))
)
),
# Create a new row for the table.
DT::dataTableOutput("table")
)
server <- function(input, output) {
# Filter data based on selections
output$table <- DT::renderDataTable(DT::datatable({
data <- mydata
if (input$Province != "All") {
data <- data[data$`İl Adı`== input$Province,]
}
if (input$`University Type` != "All") {
data <- data[data$`Üniversite Türü` == input$`University Type`,]
}
if (input$`University Name` != "All") {
data <- data[data$`Üniversite Adı` == input$`University Name`,]
}
data
}))
library(ggplot2)
mydata<-readxl::read_excel("Shniy/App.R/foreign_students_by_nationality_2021_2022.xlsx")
ui<-fluidPage(
titlePanel(strong("Foreign Students Number in Turkey")),
# Create a new Row in the UI for selectInputs
fluidRow(
column(4,
selectInput("Province",
"Province:",
c("All",
unique(as.character(mydata$`İl Adı`))))
),
column(4,
selectInput("University Type",
"University Type:",
c("All",
unique(as.character(mydata$`Üniversite Türü`))))
),
column(4,
selectInput("University Name",
"University Names:",
c("All",
unique(as.character(mydata$`Üniversite Adı`))))
)
),
# Create a new row for the table.
DT::dataTableOutput("table")
)
server <- function(input, output) {
# Filter data based on selections
output$table <- DT::renderDataTable(DT::datatable({
data <- mydata
if (input$Province != "All") {
data <- data[data$`İl Adı`== input$Province,]
}
if (input$`University Type` != "All") {
data <- data[data$`Üniversite Türü` == input$`University Type`,]
}
if (input$`University Name` != "All") {
data <- data[data$`Üniversite Adı` == input$`University Name`,]
}
data
}))
}
shinyApp(ui,server)
library(ggplot2)
mydata<-readxl::read_excel("Shniy/App.R/foreign_students_by_nationality_2021_2022.xlsx")
ui<-fluidPage(
titlePanel(strong("Foreign Students Number in Turkey")),
# Create a new Row in the UI for selectInputs
fluidRow(
column(4,
selectInput("Province",
"Province:",
c("All",
unique(as.character(mydata$`İl Adı`))))
),
column(4,
selectInput("University Type",
"University Type:",
c("All",
unique(as.character(mydata$`Üniversite Türü`))))
),
column(4,
selectInput("University Name",
"University Names:",
c("All",
unique(as.character(mydata$`Üniversite Adı`))))
)
),
# Create a new row for the table.
DT::dataTableOutput("table")
)
server <- function(input, output) {
# Filter data based on selections
output$table <- DT::renderDataTable(DT::datatable({
data <- mydata
if (input$Province != "All") {
data <- data[data$`İl Adı`== input$Province,]
}
if (input$`University Type` != "All") {
data <- data[data$`Üniversite Türü` == input$`University Type`,]
}
if (input$`University Name` != "All") {
data <- data[data$`Üniversite Adı` == input$`University Name`,]
}
data
}))
}
shinyApp(ui,server)
library(ggplot2)
mydata<-readxl::read_excel("Shniy/App.R/foreign_students_by_nationality_2021_2022.xlsx")
ui<-fluidPage(
titlePanel(strong("Foreign Students Number in Turkey")),
# Create a new Row in the UI for selectInputs
fluidRow(
column(4,
selectInput("Province",
"Province:",
c("All",
unique(as.character(mydata$`İl Adı`))))
),
column(4,
selectInput("University Type",
"University Type:",
c("All",
unique(as.character(mydata$`Üniversite Türü`))))
),
column(4,
selectInput("University Name",
"University Names:",
c("All",
unique(as.character(mydata$`Üniversite Adı`))))
)
),
# Create a new row for the table.
DT::dataTableOutput("table")
)
server <- function(input, output) {
# Filter data based on selections
output$table <- DT::renderDataTable(DT::datatable({
data <- mydata
if (input$Province != "All") {
data <- data[data$`İl Adı`== input$Province,]
}
if (input$`University Type` != "All") {
data <- data[data$`Üniversite Türü` == input$`University Type`,]
}
if (input$`University Name` != "All") {
data <- data[data$`Üniversite Adı` == input$`University Name`,]
}
data
}))
}
shinyApp(ui,server)
library(ggplot2)
mydata<-readxl::read_excel("Shniy/App.R/foreign_students_by_nationality_2021_2022.xlsx")
ui<-fluidPage(
titlePanel(strong("Foreign Students Number in Turkey")),
# Create a new Row in the UI for selectInputs
fluidRow(
column(4,
selectInput("Province",
"Province:",
c("All",
unique(as.character(mydata$`İl Adı`))))
),
column(4,
selectInput("University Type",
"University Type:",
c("All",
unique(as.character(mydata$`Üniversite Türü`))))
),
column(4,
selectInput("University Name",
"University Names:",
c("All",
unique(as.character(mydata$`Üniversite Adı`))))
)
),
# Create a new row for the table.
DT::dataTableOutput("table")
)
server <- function(input, output) {
# Filter data based on selections
output$table <- DT::renderDataTable(DT::datatable({
data <- mydata
if (input$Province != "All") {
data <- data[data$`İl Adı`== input$Province,]
}
if (input$`University Type` != "All") {
data <- data[data$`Üniversite Türü` == input$`University Type`,]
}
if (input$`University Name` != "All") {
data <- data[data$`Üniversite Adı` == input$`University Name`,]
}
data
}))
}
shinyApp(ui,server)
library(ggplot2)
mydata<-readxl::read_excel("Shniy/App.R/foreign_students_by_nationality_2021_2022.xlsx")
ui<-fluidPage(
titlePanel(strong("Foreign Students Number in Turkey")),
# Create a new Row in the UI for selectInputs
fluidRow(
column(4,
selectInput("Province",
"Province:",
c("All",
unique(as.character(mydata$`İl Adı`))))
),
column(4,
selectInput("University Type",
"University Type:",
c("All",
unique(as.character(mydata$`Üniversite Türü`))))
),
column(4,
selectInput("University Name",
"University Names:",
c("All",
unique(as.character(mydata$`Üniversite Adı`))))
)
),
# Create a new row for the table.
DT::dataTableOutput("table")
)
server <- function(input, output) {
# Filter data based on selections
output$table <- DT::renderDataTable(DT::datatable({
data <- mydata
if (input$Province != "All") {
data <- data[data$`İl Adı`== input$Province,]
}
if (input$`University Type` != "All") {
data <- data[data$`Üniversite Türü` == input$`University Type`,]
}
if (input$`University Name` != "All") {
data <- data[data$`Üniversite Adı` == input$`University Name`,]
}
data
}))
}
shinyApp(ui,server)
(file.choose())
stats
shinyApp(ui,server)
knitr::opts_chunk$set(warning = FALSE)
Sys.setlocale(locale = "en_US.UTF-8")
options(dplyr.summarise.inform = FALSE)
#install.packages("readxl")
library(readxl)
library(lubridate)
library(dplyr)
library(tidyverse)
library(ggplot2)
tarim_raw = read_excel("data//tarım.xlsx")
tahil_raw = read_excel("data//tahıl.xlsx")
sebze_raw = read_excel("data//sebze.xlsx")
meyve_raw = read_excel("data//meyve.xlsx")
new_cols <- c("province","year","decare")
colnames(tarim_raw) <- new_cols
new_cols <- c("vegetable_type","province","year","production")
colnames(sebze_raw) <- new_cols
new_cols <- c("grain_type","province","year","production")
colnames(tahil_raw) <- new_cols
Regions=read_excel("data//SehirlerBolgeler.xlsx")
head(tarim_raw)
head(tahil)
tahil_v1 <- separate(data = tahil_raw, col = grain_type, into = c("main_type", "product_type"), sep = "ve")
tahil <- separate(data = tahil_v1, col = product_type, into = c("product_type", "unit"), sep = "-")
sebze_v1 <- separate(data = sebze_raw, col = vegetable_type, into = c("main_type", "product_type"), sep = "ve")
sebze <- separate(data = sebze_v1, col = product_type, into = c("product_type", "unit"), sep = "-")
meyve_v1 <- separate(data = meyve_raw, col = Tür, into = c("main_type", "product_type"), sep = " ve ")
meyve <- separate(data = meyve_v1, col = product_type, into = c("product_type", "unit"), sep = "-")
new_cols <- c("province","year","decare")
colnames(tarim_raw) <- new_cols
new_cols <- c("vegetable_type","province","year","production")
colnames(sebze_raw) <- new_cols
new_cols <- c("grain_type","province","year","production")
colnames(tahil_raw) <- new_cols
head(tarim_raw)
head(tahil)
head(sebze)
head(meyve)
knitr::opts_chunk$set(warning = FALSE)
Sys.setlocale(locale = "en_US.UTF-8")
options(dplyr.summarise.inform = FALSE)
options(scipen=999)
#install.packages("readxl")
#install.packages("ggrepel")
library(readxl)
library(lubridate)
library(dplyr)
library(tidyverse)
library(ggplot2)
library(tidyr)
library(ggrepel)
#install.packages("readxl")
install.packages("ggrepel")
library(readxl)
library(lubridate)
library(dplyr)
library(tidyverse)
library(ggplot2)
library(tidyr)
library(ggrepel)
shiny::runApp('Shniy/App.R')
runApp('Shniy/App.R')
shinyApp(ui,server)
install.packages('rsconnect')
install.packages("rsconnect")
shiny::runApp('Shniy/App.R')
shinyApp(ui,server)
runApp('Shniy/App.R')
shiny::runApp('Shniy')
runApp('Shniy')
mydata<-readxl::read_excel("Shniy/foreign_students_by_nationality_2021_2022.xlsx")
runApp('Shniy')
shinyApp(ui,server)
server <- function(input, output) {
# Filter data based on selections
output$table <- DT::renderDataTable(DT::datatable(filter="top"
{
# Filter data based on selections
output$table <- DT::renderDataTable(DT::datatable(
{
data <- mydata
if (input$Province != "All") {
data <- data[data$`İl Adı`== input$Province,]
}
if (input$`University Type` != "All") {
data <- data[data$`Üniversite Türü` == input$`University Type`,]
}
if (input$`University Name` != "All") {
data <- data[data$`Üniversite Adı` == input$`University Name`,]
}
data
}))
server <- function(input, output) {
# Filter data based on selections
output$table <- DT::renderDataTable(DT::datatable(
{
data <- mydata
if (input$Province != "All") {
data <- data[data$`İl Adı`== input$Province,]
}
if (input$`University Type` != "All") {
data <- data[data$`Üniversite Türü` == input$`University Type`,]
}
if (input$`University Name` != "All") {
data <- data[data$`Üniversite Adı` == input$`University Name`,]
}
data
}))
}
runApp('Shniy')
runApp('Shniy')
mydata<-readxl::read_excel("Shniy/foreign_students_by_nationality_2021_2022.xlsx")
runApp('Shniy')
shinyApp(ui,server)
runApp('Shniy')
kibrary(shiny)
library(shiny)
runApp('Shniy')
runApp('Shniy')
mydata<-readxl::read_excel("Shniy/foreign_students_by_nationality_2021_2022.xlsx")
setwd("C:/R-4.2.1/mef06-aktas8154")
runApp('Shniy')
shiny::runApp('Shniy')
runApp('Shniy')
runApp('Shniy')
setwd("C:/R-4.2.1/mef06-aktas8154/Shniy")
runApp()
runApp()
