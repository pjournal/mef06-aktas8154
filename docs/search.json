[
  {
    "objectID": "assignment1.html",
    "href": "assignment1.html",
    "title": "1  Sabri Demirdal Assignment 1",
    "section": "",
    "text": "Firstly, I’m Sabri and I graduated from Bogazici university department of economics in 2020. After the graduation, I started to work in the investment office of the Presidency of Republic of Turkey and I have been working here for almost two years as an Analyst.Even if I am dealing with some data process like FDI report and some sector analysis in Turkey in my job, I want to go deeper into data science and work in the more sophisticated and technical job that related to in that area.Therefore I started to Big Data Analytics master program at MEF university.In this sense, despite the fact that until the university I had no idea and any information about this area but some courses that I took in the university and some online bootcamps in the coursera and udemy like platforms bring my knowledge to some level, so with this master program I hope to achive enough proficiency to start a good job in this field.\nYou access my Linkedin account by clicking here,\nand my E-mail sdemirdal@invest.gov.tr"
  },
  {
    "objectID": "assignment1.html#wenxi-zhang---k-means-clustering-usage-in-datasets-with-missing-values",
    "href": "assignment1.html#wenxi-zhang---k-means-clustering-usage-in-datasets-with-missing-values",
    "title": "1  Sabri Demirdal Assignment 1",
    "section": "3.1 Wenxi Zhang - k-means clustering usage in datasets with missing values",
    "text": "3.1 Wenxi Zhang - k-means clustering usage in datasets with missing values\nThis content from Wenzi Zhang who graduated from Columbia University. She aim to utilize a modified K-means algorithm to handle data with missing values.\nK-means clustering is a very popular type of unsupervised learning and it is a clustering method that aims to partition n observations into k clusters in which each observation belongs to the cluster with the nearest cluster centroid and used commonly in machine learning models.\n\n\n\nK means Clustering\n\n\nHowever, the standard K-means algorithm fails to accomodate data with missing values. This modified k-means algorithm below takes missing values into account. When calculating the sum squared error of each data point to the centroid, we only consider the partial distance with entries with non-NA values. This innovation in the algorithm could be beneficial for large sparse datasets with missing values, especially for datasets of recommendation systems."
  },
  {
    "objectID": "assignment1.html#downloading-data-using-quantmod-package-in-r",
    "href": "assignment1.html#downloading-data-using-quantmod-package-in-r",
    "title": "1  Sabri Demirdal Assignment 1",
    "section": "4.1 Downloading Data Using Quantmod Package in R",
    "text": "4.1 Downloading Data Using Quantmod Package in R\nQuantmod provides a very powerful function for downloading financial data from the web. This function is called getSymbols. The getSymbols() method sends a request to download and manage data from public sources or local data. It is necessary to pass some parameters within this method to make the desired request. The first argument of this function is a character vector specifying the names of the symbols to be downloaded. Then you can specify the source from which you want to get the data.\nThe quantmod package is capable of downloading data from a variety of sources. The current supported sources are: yahoo, google, MySQL, FRED, csv, RData, and oanda. For example, FRED (Federal Reserve Economic Data), is a database of 20,070 U.S. economic time series ().\nExample: USD/EUR exchange rates from Oanda\n\nlibrary('quantmod')\n\nZorunlu paket yükleniyor: xts\n\n\nZorunlu paket yükleniyor: zoo\n\n\n\nAttaching package: 'zoo'\n\n\nThe following objects are masked from 'package:base':\n\n    as.Date, as.Date.numeric\n\n\nZorunlu paket yükleniyor: TTR\n\n\nRegistered S3 method overwritten by 'quantmod':\n  method            from\n  as.zoo.data.frame zoo \n\ngetSymbols(Symbols = 'USD/EUR', src = 'oanda')\n\n[1] \"USD/EUR\"\n\n\nHere we have loaded the data for USD/EUR from the Oanda API which provides free currency data. The getSymbols() method doesn’t return any output. Instead, it creates an internal object in the Global Environment which in this case is the USDEUR object. The data object is an “extensible time series” (xts) object.\n\nhead(USDEUR,15)\n\n            USD.EUR\n2022-04-23 0.926153\n2022-04-24 0.926068\n2022-04-25 0.931160\n2022-04-26 0.936182\n2022-04-27 0.944162\n2022-04-28 0.951054\n2022-04-29 0.948492\n2022-04-30 0.948290\n2022-05-01 0.948296\n2022-05-02 0.950676\n2022-05-03 0.950338\n2022-05-04 0.948008\n2022-05-05 0.946067\n2022-05-06 0.947847\n2022-05-07 0.948250\n\n\nTo see the starting point of the data, type the following command. It fetches and displays the first 15 rows of the data.\nHere is the full post."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "SABRİ DEMİRDAL Progress Journal",
    "section": "",
    "text": "This progress journal covers [STUDENT NAME SURNAME / PROJECT GROUP NAME]’s work during their term at BDA 503 Fall 2022.\nEach section is an assignment or an individual work."
  },
  {
<<<<<<< Updated upstream
=======
<<<<<<< HEAD
<<<<<<< HEAD
    "objectID": "assignment1.html",
    "href": "assignment1.html",
    "title": "1  Sabri Demirdal Assignment 1",
    "section": "",
    "text": "Firstly, I’m Sabri and I graduated from Bogazici university department of economics in 2020. After the graduation, I started to work in the investment office of the Presidency of Republic of Turkey and I have been working here for almost two years as an Analyst.Even if I am dealing with some data process like FDI report and some sector analysis in Turkey in my job, I want to go deeper into data science and work in the more sophisticated and technical job that related to in that area.Therefore I started to Big Data Analytics master program at MEF university.In this sense, despite the fact that until the university I had no idea and any information about this area but some courses that I took in the university and some online bootcamps in the coursera and udemy like platforms bring my knowledge to some level, so with this master program I hope to achive enough proficiency to start a good job in this field.\nYou access my Linkedin account by clicking here,\nand my E-mail sdemirdal@invest.gov.tr"
  },
  {
    "objectID": "assignment1.html#wenxi-zhang---k-means-clustering-usage-in-datasets-with-missing-values",
    "href": "assignment1.html#wenxi-zhang---k-means-clustering-usage-in-datasets-with-missing-values",
    "title": "1  Sabri Demirdal Assignment 1",
    "section": "3.1 Wenxi Zhang - k-means clustering usage in datasets with missing values",
    "text": "3.1 Wenxi Zhang - k-means clustering usage in datasets with missing values\nThis content from Wenzi Zhang who graduated from Columbia University. She aim to utilize a modified K-means algorithm to handle data with missing values.\nK-means clustering is a very popular type of unsupervised learning and it is a clustering method that aims to partition n observations into k clusters in which each observation belongs to the cluster with the nearest cluster centroid and used commonly in machine learning models.\n\n\n\nK means Clustering\n\n\nHowever, the standard K-means algorithm fails to accomodate data with missing values. This modified k-means algorithm below takes missing values into account. When calculating the sum squared error of each data point to the centroid, we only consider the partial distance with entries with non-NA values. This innovation in the algorithm could be beneficial for large sparse datasets with missing values, especially for datasets of recommendation systems."
  },
  {
    "objectID": "assignment1.html#downloading-data-using-quantmod-package-in-r",
    "href": "assignment1.html#downloading-data-using-quantmod-package-in-r",
    "title": "1  Sabri Demirdal Assignment 1",
    "section": "4.1 Downloading Data Using Quantmod Package in R",
    "text": "4.1 Downloading Data Using Quantmod Package in R\nQuantmod provides a very powerful function for downloading financial data from the web. This function is called getSymbols. The getSymbols() method sends a request to download and manage data from public sources or local data. It is necessary to pass some parameters within this method to make the desired request. The first argument of this function is a character vector specifying the names of the symbols to be downloaded. Then you can specify the source from which you want to get the data.\nThe quantmod package is capable of downloading data from a variety of sources. The current supported sources are: yahoo, google, MySQL, FRED, csv, RData, and oanda. For example, FRED (Federal Reserve Economic Data), is a database of 20,070 U.S. economic time series ().\nExample: USD/EUR exchange rates from Oanda\n\nlibrary('quantmod')\n\nZorunlu paket yükleniyor: xts\n\n\nZorunlu paket yükleniyor: zoo\n\n\n\nAttaching package: 'zoo'\n\n\nThe following objects are masked from 'package:base':\n\n    as.Date, as.Date.numeric\n\n\nZorunlu paket yükleniyor: TTR\n\n\nRegistered S3 method overwritten by 'quantmod':\n  method            from\n  as.zoo.data.frame zoo \n\ngetSymbols(Symbols = 'USD/EUR', src = 'oanda')\n\n[1] \"USD/EUR\"\n\n\nHere we have loaded the data for USD/EUR from the Oanda API which provides free currency data. The getSymbols() method doesn’t return any output. Instead, it creates an internal object in the Global Environment which in this case is the USDEUR object. The data object is an “extensible time series” (xts) object.\n\nhead(USDEUR,15)\n\n            USD.EUR\n2022-04-23 0.926153\n2022-04-24 0.926068\n2022-04-25 0.931160\n2022-04-26 0.936182\n2022-04-27 0.944162\n2022-04-28 0.951054\n2022-04-29 0.948492\n2022-04-30 0.948290\n2022-05-01 0.948296\n2022-05-02 0.950676\n2022-05-03 0.950338\n2022-05-04 0.948008\n2022-05-05 0.946067\n2022-05-06 0.947847\n2022-05-07 0.948250\n\n\nTo see the starting point of the data, type the following command. It fetches and displays the first 15 rows of the data.\nHere is the full post."
  },
  {
=======
>>>>>>> 7f78996dbe553536b59578501518cf984092ad3c
=======
>>>>>>> 7f78996dbe553536b59578501518cf984092ad3c
>>>>>>> Stashed changes
    "objectID": "assignment1.html#the-power-of-mutate-for-data-wrangling-in-r",
    "href": "assignment1.html#the-power-of-mutate-for-data-wrangling-in-r",
    "title": "1  Sabri Demirdal Assignment 1",
    "section": "4.2 The Power of mutate( ) for Data Wrangling in R",
    "text": "4.2 The Power of mutate( ) for Data Wrangling in R\nmutate() is a dplyr function that adds new variables and preserves existing ones. That’s what the documentation says. So when you want to add new variables or change one already in the dataset, that’s your good ally. Given our dataset df , we can easily add columns with calculations.\n\ndf <- data.frame(col1=c(1,2,3,4,5,7,6,8,9,7),\n                 col2=c(2,3,4,5,6,5,5,4,6,3),\n                 col3=c(5,7,8,9,9,3,5,3,8,9),\n                 col4=c(43,54,6,3,8,5,6,4,4,3))\ndf\n\n   col1 col2 col3 col4\n1     1    2    5   43\n2     2    3    7   54\n3     3    4    8    6\n4     4    5    9    3\n5     5    6    9    8\n6     7    5    3    5\n7     6    5    5    6\n8     8    4    3    4\n9     9    6    8    4\n10    7    3    9    3\n\n\n\nlibrary(\"dplyr\")\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:xts':\n\n    first, last\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n# Add mean, std and median of columns\nmutate(df, mean_col1 = mean(col1),\n       std_col2 = sd(col2), \n       median_col3 = median(col3))\n\n   col1 col2 col3 col4 mean_col1 std_col2 median_col3\n1     1    2    5   43       5.2 1.337494         7.5\n2     2    3    7   54       5.2 1.337494         7.5\n3     3    4    8    6       5.2 1.337494         7.5\n4     4    5    9    3       5.2 1.337494         7.5\n5     5    6    9    8       5.2 1.337494         7.5\n6     7    5    3    5       5.2 1.337494         7.5\n7     6    5    5    6       5.2 1.337494         7.5\n8     8    4    3    4       5.2 1.337494         7.5\n9     9    6    8    4       5.2 1.337494         7.5\n10    7    3    9    3       5.2 1.337494         7.5\n\n\nHere is the link of post."
  },
  {
<<<<<<< Updated upstream
=======
<<<<<<< HEAD
<<<<<<< HEAD
=======
=======
>>>>>>> 7f78996dbe553536b59578501518cf984092ad3c
>>>>>>> Stashed changes
    "objectID": "assignment1.html#section",
    "href": "assignment1.html#section",
    "title": "1  Sabri Demirdal Assignment 1",
    "section": "4.3 ",
    "text": "4.3"
  },
  {
<<<<<<< Updated upstream
=======
<<<<<<< HEAD
>>>>>>> 7f78996dbe553536b59578501518cf984092ad3c
=======
>>>>>>> 7f78996dbe553536b59578501518cf984092ad3c
>>>>>>> Stashed changes
    "objectID": "assignment1.html#a-simple-introduction-to-ggplot2-for-plotting-your-data",
    "href": "assignment1.html#a-simple-introduction-to-ggplot2-for-plotting-your-data",
    "title": "1  Sabri Demirdal Assignment 1",
    "section": "4.3 A simple introduction to ggplot2 (for plotting your data!)",
    "text": "4.3 A simple introduction to ggplot2 (for plotting your data!)\nData visualization is a powerful tool for scientists and their audiences to easily grasp relationships and trends in data. Some of you may already know how to generate plots using base R. In this blog post, we’re going to introduce a package called “ggplot2” that makes it more intuitive to create consistently nice-looking figures in R.The “gg” part of “ggplot2” stands for the grammar of graphics. Just like sentences are composed of various parts of speech (e.g., nouns, verbs, adjectives) that are arranged using a grammatical structure, ggplot2 allows us to create figures using a standardized syntax.\nLet’s load up a data set that comes built into R, called ChickWeight\n\ndata(ChickWeight)\nhead(ChickWeight)\n\n  weight Time Chick Diet\n1     42    0     1    1\n2     51    2     1    1\n3     59    4     1    1\n4     64    6     1    1\n5     76    8     1    1\n6     93   10     1    1\n\n\nOnce you figure out how you want to map your data to aesthetic elements, then you present your data using a geometric object, like a scatterplot, boxplot, lineplot, etc.\n\n\n\nConcept of ggplot\n\n\nAN EXAMPLE\n\nlibrary(\"ggplot2\")\nggplot(ChickWeight, aes(x = Time, y = weight)) +\ngeom_point(aes(color = Diet))\n\n\n\n\nHere is the full link."
  }
]